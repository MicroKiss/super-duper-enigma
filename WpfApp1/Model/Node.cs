using System;
using System.Collections.Generic;
using System.Globalization;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Data;
using System.Windows.Media.Imaging;

namespace WpfApp1.Model
{
    public enum DisplayMode
    {
        Regular,
        Bold,
        Italic,
        Underlined
    }

    public class Node
    {
        public string Label { get; set; }
        public DisplayMode? DisplayMode { get; set; }
        public List<byte>? LargeIcon { get; set; }
        public List<byte>? SmallIcon { get; set; }

        public Node (string label, DisplayMode? displayMode = WpfApp1.Model.DisplayMode.Regular)
        {
            Label = label;
            DisplayMode = displayMode;
            LargeIcon = GetExampleIcon();
            SmallIcon = GetExampleIcon();
        }

        private List<byte> GetExampleIcon ()
        {
            string base64Image = "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";
            return new List<byte> (Convert.FromBase64String(base64Image));
        }
    }
}
